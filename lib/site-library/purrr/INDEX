<<<<<<< HEAD
accumulate              Accumulate recursive folds across a list
array-coercion          Coerce array to list
as_mapper               Convert an object into a mapper function
as_vector               Coerce a list to a vector
compose                 Compose multiple functions
cross                   Produce all combinations of list elements
detect                  Find the value or position of the first match.
every                   Do every or some elements of a list satisfy a
                        predicate?
flatten                 Flatten a list of lists into a simple vector.
get-attr                Infix attribute accessor
=======
accumulate              Accumulate intermediate results of a vector
                        reduction
array-coercion          Coerce array to list
as_mapper               Convert an object into a mapper function
as_vector               Coerce a list to a vector
attr_getter             Create an attribute getter function
compose                 Compose multiple functions
cross                   Produce all combinations of list elements
detect                  Find the value or position of the first match
done                    Done box
every                   Do every, some, or none of the elements of a
                        list satisfy a predicate?
exec                    Execute a function
faq-adverbs-export      Best practices for exporting adverb-wrapped
                        functions
flatten                 Flatten a list of lists into a simple vector.
>>>>>>> ddff10c8c1a385735ed59fadb33c4b79e43db9ce
has_element             Does a list contain an object?
head_while              Find head/tail that all satisfies a predicate.
imap                    Apply a function to each element of a vector,
                        and its index
<<<<<<< HEAD
invoke                  Invoke functions.
=======
insistently             Transform a function to make it run insistently
                        or slowly
>>>>>>> ddff10c8c1a385735ed59fadb33c4b79e43db9ce
keep                    Keep or discard elements using a predicate
                        function.
lift                    Lift the domain of a function
list_modify             Modify a list
lmap                    Apply a function to list-elements of a list
<<<<<<< HEAD
map                     Apply a function to each element of a vector
map2                    Map over multiple inputs simultaneously.
modify                  Modify elements selectively
negate                  Negate a predicate function.
null-default            Default value for 'NULL'.
partial                 Partial apply a function, filling in some
                        arguments.
prepend                 Prepend a vector
=======
map                     Apply a function to each element of a list or
                        atomic vector
map2                    Map over multiple inputs simultaneously.
map_if                  Apply a function to each element of a vector
                        conditionally
modify                  Modify elements selectively
modify_in               Modify a pluck location
negate                  Negate a predicate function.
null-default            Default value for 'NULL'
partial                 Partial apply a function, filling in some
                        arguments.
pluck                   Pluck or chuck a single element from a vector
                        or environment
prepend                 Prepend a vector
rate-helpers            Create delaying rate settings
rate_sleep              Wait for a given time
>>>>>>> ddff10c8c1a385735ed59fadb33c4b79e43db9ce
rbernoulli              Generate random sample from a Bernoulli
                        distribution
rdunif                  Generate random sample from a discrete uniform
                        distribution
reduce                  Reduce a list to a single value by iteratively
<<<<<<< HEAD
                        applying a binary function.
rerun                   Re-run expressions multiple times.
safely                  Capture side effects.
splice                  Splice objects and lists of objects into a list
transpose               Transpose a list.
vec_depth               Compute the depth of a vector
=======
                        applying a binary function
rep_along               Repeat a value with matching length
rerun                   Re-run expressions multiple times.
safely                  Capture side effects.
set_names               Set names in a vector
splice                  Splice objects and lists of objects into a list
transpose               Transpose a list.
vec_depth               Compute the depth of a vector
zap                     Zap an element
>>>>>>> ddff10c8c1a385735ed59fadb33c4b79e43db9ce
